name: Publish

on:
  pull_request:
    branches: 
      - main
    types: 
      - opened
      - synchronize
      - closed
    paths:
      - packages/**
  workflow_dispatch:
    inputs:
      version:
        description: 'Semver version to bump'
        required: true
        default: 'patch'

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.workflow.outputs.version || steps.major.outputs.version ||  steps.minor.outputs.version ||  steps.patch.outputs.version }}
    steps:
      - id: patch
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        run: echo "::set-output name=version::patch"
      - id: minor
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        run: echo "::set-output name=version::minor"
      - id: major
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        run: echo "::set-output name=version::major"
      - id: workflow
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "::set-output name=version::${{ github.event.inputs.version }}"

  test-build-and-publish:
    runs-on: ubuntu-latest

    needs: get-version

    # require a version unless a PR is opened or synchronized
    # prevents unlabeled and closed PRs from getting published
    if: ${{ (needs.get-version.outputs.version && github.event.action == 'closed' && github.event.pull_request.merged == true) || github.event_name == 'workflow_dispatch' || github.event.action == 'opened' || github.event.action == 'synchronize' }}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      # if running from workflow_dispatch or closing a PR, checkout main
      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        with:
          fetch-depth: 0  # pulls tags so lerna can compare changes

      # else checkout branch
      - uses: actions/checkout@v2
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' }}
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: NODE_ENV=production yarn build

      - name: Lint
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn lint

      - name: Test
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn test

      # set to the author of the most recent commit
      - name: Set author
        run: |
          git config user.email "`git log --format='%ae' HEAD^!`"
          git config user.name "`git log --format='%an' HEAD^!`"
          git config user.email
          git config user.name

      - name: Set NPM Token
        run: |
          npm set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          npm whoami

      - name: Publish production package
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        run: lerna publish ${{ needs.get-version.outputs.version }} --conventional-commits --no-changelog --conventional-graduate --no-verify-access --yes

      - name: Replace forward slashes in branch name
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' }}
        env: 
          github_ref: ${{github.head_ref}}
        run: |
          branch="${github_ref////-}"
          echo "BRANCH=$branch" >> $GITHUB_ENV

      - name: Publish prerelease from PR
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' }}
        run: lerna publish prerelease --canary --preid ${{ env.BRANCH }} --pre-dist-tag canary --no-verify-access --yes
