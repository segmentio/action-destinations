name: Publish

on:
  pull_request:
    branches: [main]
    types: [closed]
    paths:
      - packages/**
  workflow_dispatch:
    inputs:
      version:
        description: 'Semver version to bump'
        required: true
        default: 'patch'

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.workflow.outputs.version || steps.major.outputs.version ||  steps.minor.outputs.version ||  steps.patch.outputs.version }}
    steps:
      - id: patch
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        run: echo "::set-output name=version::patch"
      - id: minor
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        run: echo "::set-output name=version::minor"
      - id: major
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        run: echo "::set-output name=version::major"
      - id: workflow
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "::set-output name=version::${{ github.event.inputs.version }}"

  test-build-and-publish:
    runs-on: ubuntu-latest

    needs: get-version
    if: ${{ needs.get-version.outputs.version }}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: NODE_ENV=production yarn build

      - name: Lint
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn lint

      - name: Test
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn test

      - name: Set author
        run: |
          git config user.email "`git log --format='%ae' HEAD^!`"
          git config user.name "`git log --format='%an' HEAD^!`"

      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: lerna publish ${{ needs.get-version.outputs.version }} --yes
