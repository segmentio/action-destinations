name: Publish Production

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - yarn.lock
      - tsconfig.json
      - packages/**
      - '!packages/cli/**'
      - '!packages/cli-internal/**'
      - '!packages/browser-destinations/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Semver version to bump'
        required: true
        default: 'patch'

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.workflow.outputs.version || steps.major.outputs.version ||  steps.minor.outputs.version ||  steps.patch.outputs.version }}
    steps:
      - id: patch
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        run: echo "::set-output name=version::patch"
      - id: minor
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        run: echo "::set-output name=version::minor"
      - id: major
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        run: echo "::set-output name=version::major"
      - id: workflow
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "::set-output name=version::${{ github.event.inputs.version }}"

  test-build-and-publish:
    runs-on: ubuntu-latest
    needs: get-version

    # requires a version, preventing unlabeled and closed PRs from getting published
    if: ${{ (needs.get-version.outputs.version && github.event.action == 'closed' && github.event.pull_request.merged == true) || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main') }}

    steps:
      # if running from workflow_dispatch or closing a PR, checkout main
      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Use Github Personal Access Token
        run: git config --global url."https://${{ secrets.GH_PAT }}@github.com/".insteadOf ssh://git@github.com/

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: NODE_ENV=production yarn build

      - name: Lint
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn lint

      - name: Test
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn test

      # set to the author of the most recent commit
      - name: Set author
        run: |
          git config user.email "`git log --format='%ae' HEAD^!`"
          git config user.name "`git log --format='%an' HEAD^!`"
          git config user.email
          git config user.name

      - name: Set NPM Token
        run: |
          npm set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          npm whoami

      - name: Publish production package
        run: lerna publish ${{ needs.get-version.outputs.version }} --conventional-commits --no-changelog --conventional-graduate --no-verify-access --yes
